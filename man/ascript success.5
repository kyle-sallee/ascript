.TH "ascript success" 5

.SH NAME
.EX
ascript success

.SH COPYRIGHT
.EX
By Kyle Sallee in 2020 copyrighted.

.SH VAR METADATA
.EX
For each var 256 bytes metadata exists.

.SH VAR METADATA WHY CREATE?
.EX
The var name, map addresses, length, sizes and more must be stored.

.SH TO THE COMPILER THE METADATA WHY NOT DELEGATE?
.EX
Scripts are    not compiled.
During  interpretation a compiler process does not execute.
For     each   var
for     each   label metadata must exist.

.SH WHY METADATA?
.EX
Sans metadata var location and recycling would be difficult.

.SH WHY NOT DO LIKE AN ASM HACKER?
.EX
To the script author a   gigabyte address space why   not delegate?
By the script author the offset   address calcs would be  balked.

.SH WHY NOT STRUCTURE IT AND ALLOW NAMES?
.EX
With  names and sizes the  address space use why not structure?
Might be    fun.
For   var   recycling more effort  would become.

.SH SO METADATA IS MUSTDATA?
.EX
For a script interpreter metadata is unavoidable.

.SH WHAT ABOUT THE NEXT ARGOT SKIP?
.EX
In  early    revisions the next argot skip was introduced.
The expected outcome       when attained
the next     argot     is       skipped.

.SH PROCRASTINATE?
.EX
By   prior planned     procrastination
the  performance   is  preserved.
When later checked how can the outcome ascertained?

.SH SUCCESS
.EX
In what pocket   can success or any other idea be held?
In the  metadata as  success    the errno byte is stored.

.SH SUCCESS ASCERTAINING
.EX
A   var   metadata success value when updated when 0
an  error did  not become.

.SH A SKIP WOULD NOT ALWAYS BE EXPECTED!
.EX
The argot equal equal when invoked a skip would be expected.
The argot       equal when invoked a skip would    surprise.
For argot       equal a    target    var  must     exist.
In  var   metadata    the  success   byte value is stored.

.SH RELATED ARGOT
.EX
failure, failure set,
success, success set,
errno    from success,
success  from errno

.SH WHY NOT CONTROL THE FLOW?
.EX
Rather   than
despotic control
liberty  preservation
is       ascript's paradigm.

.SH WHAT HAPPENS?
.EX
An   argot when invoked  a request becomes.
Compliance or   defiance   might   result.
Both       possibilities   must    be     anticipated and handled.

.SH TO REMAIN IGNORANT
.EX
The success   byte value if not checked
the ignorance liberty    is     sustained.

.SH IGNORANCE IS BLISS?
.EX
Sometimes the  failure probability   is so low that
success   when assumed fewer opcodes must  execute.

.SH CONTROL IS AN IDEA
.EX
Where control   exists  deprivation and threats are inflicted.
By    computers idle    opcodes are not hoarded
and   electricity               is  not craved.
The   inhumane  control idea    is      inane.

.SH WHY THREATEN A COMPUTER?
.EX
"If then or ELSE" an idiot's idiom from barbaric enslaved minds
was never required.
With threats a computer never complies.

.SH A POSSIBILITY PLETHORA
.EX
Next argot skip and success metadata
are  among a    possibility plethora.
A    correct    method      never existed.

.SH CREATE ARGOT IF?
.EX
A    favorite answer is  solicited.
The  opcode   when   not created...

.SH FAMILIARITY
.EX
From what is endured daily  an expectation becomes.
But  perhaps that              expectation should    differ?
     Perhaps better  should be expected    should be demanded?

.SH HOPPING SKIPPING DANCE
.EX
Script   authors  and      computers dance  together.
Hopping  skipping twirling           dances become.
Partner  dancing  solicits happiness.
Computer hacking  solicits happiness.
Should   it       not?

.SH BEAUTY SOLICITS BEAUTY
.EX
By  endured happiness       a  smile   is    solicited.
Performance while paramount by ascript beauty becomes.

.SH AUTHOR
.EX
In 2016; by Kyle Sallee; ascript was created.

.SH LICENSE
.EX
By \fBman 7 ascript\fR the license is provided.

.SH SEE ALSO
.EX
\fB
man 1 ascript
man 3 ascript a
man 5 ascript
man 5 ascript var
man 7 ascript
\fR
