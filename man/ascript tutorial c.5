.TH "ascript tutorial c" 5

.SH NAME
.EX
ascript tutorial c

.SH COPYRIGHT
.EX
By Kyle Sallee in 2017 copyrighted.

.SH L1 CPU CACHE
.EX
Tiny      per CPU core L1 caches exist.

.SH L2 CPU CACHE
.EX
Larger    per CPU core L2 caches exist.

.SH L3 CPU CACHE
.EX
One large per CPU      L3 cache  exists.

.SH CPU AFFINITY
.EX
On  affine  CPU cores only
a   process can run.
The active  CPU when   changed
the L1 and  L2  cache  content remain.

.SH PERFORMANCE
.EX
A   single CPU   when affine
the best   cache performance is  solicited.
The        CPU use  when         elevated
the        CPU frequency     can elevate.

.SH VARIOUS FACTORS
.EX
By  scheduling also and by nice value and by control groups
the process access to CPU can be controlled.
The manual page "ascript sked.3" since already glossed.
The manual page "ascript nice.3" please        gloss.

.SH SEE ALSO SEE ALSO
.EX
In    each manual  page        at the end
a     SEE ALSO     section        exists.
The  other manual  pages       if viewed
additional salient information is provided.

.SH FIND IT
.EX
The manual page that explains Linux kernel scheduling please gloss.
Where?  In a SEE ALSO section it was listed.

.SH SERVER CREATION
.EX
In   the    manual page  "ascript\ self.3"
for  terminate and stay  resident process creation
also called              server   process creation
all  the  required argot are      listed.

.SH FILE COMPRESSION
.EX
A    server for file    file    compression if created
then memory and process hogging would       be expected
and  can    be  avoided.

.SH NEXT PLEASE
.EX
By     control  groups  and  by  scheduling and by rlimits
the    resource use     can  be  limited.
The    ascript  manual  page for rlimit configuration
please surmise, locate, and      gloss.

.SH CONTROL
.EX
By  now  considerable  control has been gained.
The flow can not be    controlled, yet.
The deadline scheduler if mastered
the flow can     be    controlled.

.SH THE MANUAL PAGE CALLED sched.7
.EX
Was   the manual page discovered and glossed?
Yeah, scheduling is complicated.
For more amiable CPU sharing the cgroups suffice.
To  keep CPUs cool and quiet the flow must be controlled!

.SH ALWAYS ON?
.EX
A    server when always on
what can be done until tomorrow
why  complete today?

.SH DEFAULT NO LONGER
.EX
By   default all tasks  are rush jobs.
The  scheduling  when   mastered
the  extreme CPU usages to  idle cycles
can  be      deferred.

.SH Linux KERNEL DOCUMENTATION
.EX
/usr/src/linux/Documentation/cgroups/
Where else would one expect it to exist.
Everything under in /usr/src/linux/Documentation/
should be glossed, especially devices.txt and kernel-parameters.txt

.SH THE MASTER
.EX
Everything why memorize?
The CFQ IO scheduler if not enabled then argot ionice does nothing.
So why bother memorizing?

.SH HACK AND READ
.EX
An ascript script while hacking
in at least 4 other terminal emulation windows
manual pages should be displayed!
Read, wield, accomplish, attain!

.SH AUTHOR
.EX
In 2016; by Kyle Sallee; ascript was created.
In 2017; by Kyle Sallee; ascript tutorial c.5 was created.

.SH LICENSE
.EX
By \fBman 7 ascript\fR the license is provided.

.SH SEE ALSO
.EX
\fB
man 1 ascript
man 5 ascript
man 5 ascript tutorial d
man 7 ascript
\fR
