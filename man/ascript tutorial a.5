.TH "ascript tutorial a" 5

.SH NAME
.EX
ascript tutorial a

.SH COPYRIGHT
.EX
By Kyle Sallee in 2017 copyrighted.

.SH ASCRIPT ADVANCED CLASS
.EX
By numeric tutorials some essential argot are illuminated.
By alpha   tutorials some advanced  argot are illuminated.

.SH THE ARGOT loop THE ARGOT re ARE NOT ESSENTIAL?
.EX
The manual page "ascript loop.5" please gloss.
The manual page "ascript loop.3" please gloss.
The manual page "ascript re.3"   please gloss.

.SH UNROLLED LOOPS?
.EX
By an interpreter loop content would not be unrolled.
However, the loop overhead can be unrolled.
The argot re 5 if invoked 5 iterations sans counting become.
The argot re to load a duration becomes.

.SH TO ARGOT re or NOT TO ARGOT re THAT IS THE QUESTION
.EX
The argot re to load the 12k opcodes to execute
the question why     is  solicited.
The answer   because is  offered.

.SH IN ARGOT a WHY NOT INCLUDE?
.EX
If included the argot a when loading 80 extra opcodes must execute.
How often is any argot re* useful?
A conundrum becomes.  Scripts when hacking
fewer host argot when loaded better performance results.

.SH FAST FASTEST OR SLOWER.
.EX
In   ascript loop     choices are   provided.
Fast or      faster   can     be    selected.
Fast when    selected slower  could result.
Simple?

.SH SLOWER?
.EX
The manual page "ascript sked.3" please gloss.
A   slower ascript while unlikely.  CPU use can be restricted.
By  cgroups and by scheduling
the ascript process can be starved.

.SH AUTHOR
.EX
In 2016; by Kyle Sallee; ascript was created.
In 2017; by Kyle Sallee; ascript tutorial a.5 was created.

.SH LICENSE
.EX
By \fBman 7 ascript\fR the license is provided.

.SH SEE ALSO
.EX
\fB
man 1 ascript
man 5 ascript
man 5 ascript tutorial b
man 5 ascript var
man 7 ascript
\fR
