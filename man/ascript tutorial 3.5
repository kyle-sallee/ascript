.TH "ascript tutorial 3" 5

.SH NAME
.EX
ascript tutorial 3

.SH COPYRIGHT
.EX
By Kyle Sallee in 2017 copyrighted.

.SH QUICK RECAP
.EX
\&'is a near label'
\&"is a far label"
\&`is text`
whatever is a var
1a2b3c x is a hexadecimal value.

.SH REACHING FAR AND NEAR
.EX
The following manual pages please gloss:
"ascript go late.3"
"ascript go 2.3"
"ascript err go.3"
"ascript err pin.3"
"ascript tag go.3"
"ascript tag pin.3"
"ascript weir.3"
"ascript yay.3"

.SH CONCLUSION 1
.EX
A label to reach or visit many argot exists.

.SH CONCLUSION 2
.EX
The word go
the word pin
in  an   argot name when contained
the a    label will be reached or visited.

.SH NOMENCLATURE LOGIC
.EX
The English language words while borrowed
for argot   naming
a   logical method   exists.

.SH SKIP RECAP
.EX
Rather than      flow         control
a      fail      outcome when possible
a      success   outcome when attained
the    following argot   is   skipped.


.SH LABEL DISTANCE
.EX
Between label reference and label placement
by the distance the performance is not effected.

.SH LABEL PLACEMENT
.EX
Fore reference and aft reference is possible.

.SH IDEAL PLACEMENT
.EX
Not my problem.
Within the same far group placement is faster.

.SH FAR GROUPS
.EX
A far label when declared the far group changes.

.SH NEAR LABEL
.EX
Within a far group the near labels exist.

.SH NEAR LABEL UNIQUENESS
.EX
Within a far group near label names must be unique

.SH FAR LABEL UNIQUENESS
.EX
Among far groups far label names must be unique.

.SH LABEL LENGTH
.EX
For  labels 16 bytes are possible.

.SH BRANCH MERGE
.EX
By  argot go                     branch merge can be accomplished.
By  argot pin     with argot ret or
by  argot go late with argot ret branch merge can be accomplished.
The branches to   merge many methods exist.

.SH POSITIONAL PARAMETERS
.EX
What       are positional parameters?
In ascript the positional parameter idea is not empowered.

.SH INTER ARGOT COMMUNICATION
.EX
The target address and
the origin address are preserved.

.SH TYPE RAY VAR
.EX
In   type ray var many  var address can be stored.
More than two var addresses when    required
by   target   or  by  origin
a type ray var address can be contained.

.SH POSITIONAL PARAMETERS WHY NOT IMPLEMENT?
.EX
Opcodes when not executed a duration does not become.
Nothing can be accomplished faster than nothing.

.SH BUT 8086 ASM HAS POSITIONAL PARAMETERS?
.EX
WRONG, in 8086 asm the positional parameters do NOT exist!
In CPU registers or on the stack afore the IP address
addresses and data can be stored.
But why emulate that?  Target and origin suffice!

.SH LOOP
.EX
In 8086 asm a loop opcode is provided.
In ascript  a loop argot  is provided.
Loops count down and when not 0 reiterate.

.SH C SIMILAR SWITCH CASE
.EX
A    C       similar   syntax       is not emulated.
For  ascript better    syntax       is     provided.
The  afore   mentioned manual pages if     glossed
this realization       already             became.

.SH HACK TODAY
.EX
An  ascript script afore hacking
all ascript argot  learning
is  not     required!
The manual  page   "ascript.5" can be glossed.

.SH HOW MANY MANUAL PAGES EXIST?
.EX
For ascript argot with ascript and space the manual page name begins.
For ascript argot at   least   200           manual pages     exist.

.SH HOW LONG TO LEARN?
.EX
An  ascript script to hack  about 30 minutes reading suffices.
The entire  lore   to learn a few    months  might   suffice.

.SH HOW LONG TO MASTER?
.EX
A years worth of scripts aft hacking decent ability will become.
5 years worth of scripts aft hacking expert ability will become.

.SH GIVE UP NOW?
.EX
Yeah,   go    ahead  and give   up      now.
An      elite hacker to  become endless tenacity is required.
Being   noob  hacker is  the    most    fun!

.SH AUTHOR
.EX
In 2016; by Kyle Sallee; ascript was created.
In 2017; by Kyle Sallee; ascript tutorial 3.5 was created.

.SH LICENSE
.EX
By \fBman 7 ascript\fR the license is provided.

.SH SEE ALSO
.EX
\fB
man 1 ascript
man 5 ascript
man 5 ascript tutorial 4
man 7 ascript
\fR
