.TH "ascript operator" 5

.SH NAME
.EX
ascript operator

.SH COPYRIGHT
.EX
By Kyle Sallee in 2017 copyrighted.

.SH TABLE
.TS
allbox tab(	);
lll.
Symbol	Text	Meaning
 +	add	add
 +	add	string append
 ++	add add	increment
 &	and	and   bits
 @	at	at
 /	div	divide
 =	equal	assign
 ==	equal equal	comparison
 >	more	comparison
 >=	more equal	comparison
 <	less	comparison
 <=	less equal	comparison
 *	mul	multiply
 !	not	not   bits
 !&	not and	target bit removal
 !=	not equal	comparison
 |	or	or    bits
 -	sub	subtract
 --	sub sub	decrement
 ^	xor	xor   bits
 ^^	xor xor	power
 .	dot	dot
.TE

.SH NOMENCLATURE: OPERATOR
.EX
An operator is typically an arithmetic operation.

.SH IN THE ALGEBRA LANGUAGE
.EX
Between operands the operators exist.

.SH IN COMPUTER LANGUAGES
.EX
The algebra  language  if      copied
in  computer languages between operands
the operator will      exist.

.SH IN ASCRIPT LANGUAGE
.EX
All operators are argot, but
few argot     are operators.

.SH IN ASCRIPT LANGUAGE OPERANDS
.EX
As  argot direct parameters only
the operands and values     exist.

.SH WHY?
.EX
In Algebra grammar too much ambiguity exists.
Algebra to parse   too many opcodes   must execute.

.SH HOW?
.EX
The operator argot when invoked
the target address var type appropriate opcode sequence executes.

.SH WHICH?
.EX
The operator argot add when invoked
for type byte
for type int 4
for type int 8 different opcode sequences must execute.

.SH CONVENIENCE
.EX
Operator use is a performance sapping convenience.
For type prefixed operator names such as int 4 add
the extra typing would seem inconvenient.

.SH MEMORIZED
.EX
At  a script position an operator     argot   when used
the proper   opcode      sequence     address is   saved.
The target   type     if changed  the argot   lax  invoke.

.SH AUTHOR
.EX
In 2016; by Kyle Sallee; ascript          was created.
In 2017; by Kyle Sallee; ascript operator was created.

.SH LICENSE
.EX
By \fBman 7 ascript\fR the license is provided.

.SH SEE ALSO
.EX
\fB
man 1 ascript
man 5 ascript
man 5 ascript argot
man 5 ascript tutorial 1
man 5 ascript var
man 7 ascript
\fR
