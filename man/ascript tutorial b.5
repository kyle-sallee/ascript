.TH "ascript tutorial b" 5

.SH NAME
.EX
ascript tutorial b

.SH COPYRIGHT
.EX
By Kyle Sallee in 2017 copyrighted.

.SH ARRAY AND POINTERS
.EX
In  the     C       language
an  array   and     a   pointer are      similar.
For array   the     var address does not vary.
A   pointer address             can      vary.

.SH ASCRIPT ARRAY AND POINTERS
.EX
In ascript arrays and   pointers do not exist.
   A type ray var does  exist.
In a type ray var other var address can be stored.
Like an array or a pointer a type ray can act.

.SH READ AND DEFUDDLE
.EX
The manual page "ascript ray.3" please gloss.

.SH PROCESS PARAMETER PARSING
.EX
In  a type  ray var the process parameters are provided.
The file "ascript self.3" please gloss.
In  program man "/self argv" when typed the enter key when pressed
the salient information is gleaned.

.SH HATE RAY?
.EX
In  circular tri linked lists, yeah like a wheel,
the var  can be  linked.
The manual page "ascript link.3" please gloss.

.SH C LANGUAGE SIMILAR STRUCTURES
.EX
Are sub  var comprehended?  Good.
The sub  var will suffice.
The C    language similar structure support if implemented
too many opcodes  must    execute.

.SH A PAGE FROM BASH
.EX
In  the   bourne    again   shell
the C     language  similar structure support is absent.
15  years script    hacking sans structures and an idea is solicited?
Maybe     structure use     is   not  essential?

.SH SLOT SUPPORT
.EX
The argot a when loaded for target and for origin 8 slots are provided.
For a var address quick draw the slots are provided.

.SH MORE THAN AN 8 SHOOTER
.EX
In a type ray var more than 8 var address can be stored.

.SH WHY NOT COPY?
.EX
Fortran, C, PHP, C++, and Python have what in common?
By copying better is not produced, slower is produced!

.SH INDIRECT REFERENCE
.EX
As   a   var value a   var name    can be contained.
From the var value the var address can be obtained.
The manual page "ascript indirect reference.5" please gloss.

.SH POWERFUL
.EX
The indirect reference
the type ray var
the slots if wielded considerable power was attained.
Faster       scripts              can   be  created.

.SH AUTHOR
.EX
In 2016; by Kyle Sallee; ascript was created.
In 2017; by Kyle Sallee; ascript tutorial b.5 was created.

.SH LICENSE
.EX
By \fBman 7 ascript\fR the license is provided.

.SH SEE ALSO
.EX
\fB
man 1 ascript
man 5 ascript
man 5 ascript tutorial c
man 7 ascript
\fR
