.TH "ascript tutorial 5" 5

.SH NAME
.EX
ascript tutorial 5

.SH COPYRIGHT
.EX
By Kyle Sallee in 2017 copyrighted.

.SH TYPE CODE ASSOCIATION
.EX
All     hacker  languages are object oriented or  none are!
Opcodes and     data      are inseparable.

.SH OPERATOR OVERLOAD
.EX
With    ascript the argot add when    invoked for the var type
the     correct opcode    sequence is executed.
In      almost  every     hacker      language
the     operators         are         overloaded.

.SH BUZZ KILL!
.EX
To  avoid    being buzzed
the nonsense words disempower.
The phrase   object   oriented means nothing!
The phrase   operator overload means nothing!

.SH TALKING TURKEY
.EX
Techno babble jive talking turkeys deserve plucking!

.SH CAN'T FIX STUPID
.EX
By no skill HR people buzz words are wielded.
Hackers don't buzz!
8086 asm language on a resume when listed the HR person asks,
"How many years on an assembly line did you work?"

.SH NOMENCLATURE IS NOTHING
.EX
The movie "Enter the Dragon"  aft viewing chicken clucking is possible.
But "Jeet Kun Do" mastry does not follow!

.SH NODE CREATION EXAMPLE 0
.EX
.in -8
\fB
a
node
target	`/tmp/this_please\\0`
node target at
node file
go 	'filenodemakefail'
\fR
.in

.SH NODE CREATION EXAMPLE 1
.EX
.in -8
\fB
a
node,		target	`/tmp/this_please\\0`
node target at,	target	0600 o
node mode at
node file
go 	'fail'
\fR
.in

.SH THE FILENAME WHEN REQUIRED THE ARGOT node target at WHY INVOKE?
.EX
The filename                might     change
but filename containing var might not change.

.SH THE ARGOT node target mode at WHY INVOKE?
.EX
Maybe umask does not suffice?

.SH THE INFORMATION WHEN REQUIRED THE ARGOT ARE INVOKED
.EX
The UID the GID the mode when not required in the script
nothing extra is parsed, extra opcodes do not execute.
Nothing executes faster than nothing.

.SH THE ARGOT node list
.EX
The manual page "ascript node list.3" please gloss.

.SH THE PROGRAM FIND WHY NOT EXECUTE?
.EX
File  system pathnames when acquired enormous RAM can be required.
RAM   when required page faults   become.
Pages when faulted  a    duration becomes.

.SH FOR ARGOT USE INTER-PROCESS DATA TRANSPORT NOT REQUIRED
.EX
Pathnames as acquired when processed
among process the data is not transported and
RAM use is conserved.
Fewer opcodes execute.  Less duration becomes.

.SH THE PROGRAM find PARAMETERS WHY NOT EMULATE?
.EX
For program find
for argot   node list
the output  handling differs.
The request method   differs.

.SH SUB VAR NAME
.EX
By now sub  var are  encountered.
To the host var name a  dot
and a sub var name when appended
the    sub  var name is created.

.SH SUB VAR SNUGGLING
.EX
By sub var the  host var  data as   required is accessed is modified.
A  sub var name when used the  host var name is not         required.
A  var name to address when not translated opcodes do not execute.
Nothing executes faster than nothing.

.SH SUB VAR SCOPE
.EX
The host var when unmade
the sub  var are  unmade.

.SH NODE INFORMATION
.EX
The manual page "ascript stat.3"     please gloss.
The manual page "ascript node sub.3" please gloss.
The manual page "ascript node yay.3" please gloss.

.SH CONCLUSION
.EX
Filesystem node information to  acquire to modify to test
multiple        methods     are provided.
More than  half ascript     var types   are sub var!
Like it or love it the sub  var use     is  essential.

.SH AUTHOR
.EX
In 2016; by Kyle Sallee; ascript was created.
In 2017; by Kyle Sallee; ascript tutorial 5.5 was created.

.SH LICENSE
.EX
By \fBman 7 ascript\fR the license is provided.

.SH SEE ALSO
.EX
\fB
man 1 ascript
man 5 ascript
man 5 ascript tutorial 6
man 5 ascript var
man 7 ascript
\fR
